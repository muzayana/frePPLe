<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <name>Test model for effective flows</name>
  <description>
  This test verifies the behavior of date effective flows:
    - case 1: effectivity on consuming flows of a delivery operation
    - case 2: date-effective material consumption with constrained supply
    - case 3: date-effective producing flow
  </description>
  <current>2009-01-01T00:00:00</current>

  <!--
    Case 1: Effectivity on the consuming flow of an operation
    In this example the flow is on a delivery operation, but it could be any
    operation.
    The scenario models a situation where an old product is being replaced
    by a new version of it.
    Note that in this case the effectivity dates should not overlap. In case
    they do, we would consume both the old and new product! If such an
    overlapping period is required, an alternate operation needs to be used.
  -->
  <buffers>
    <buffer name="1. end item - old version">
      <item name="1. end item - old version" />
      <producing name="1. make old end item" xsi:type="operation_fixed_time"
        duration="P1D">
        <flows>
          <flow xsi:type="flow_end">
            <buffer name="1. end item - old version" />
            <quantity>1</quantity>
          </flow>
        </flows>
      </producing>
    </buffer>
    <buffer name="1. end item - new version">
      <item name="1. end item - new version" />
      <producing name="1. make new end item" xsi:type="operation_fixed_time"
        duration="P1D">
        <flows>
          <flow xsi:type="flow_end">
            <buffer name="1. end item - new version" />
            <quantity>1</quantity>
          </flow>
        </flows>
      </producing>
    </buffer>
  </buffers>
  <operations>
    <operation name="1. deliver end item" xsi:type="operation_fixed_time"
      duration="P1D">
        <flows>
          <flow xsi:type="flow_start">
            <buffer name="1. end item - old version" />
            <effective_end>2009-02-01T00:00:00</effective_end>
            <quantity>-1</quantity>
          </flow>
          <flow xsi:type="flow_start">
            <buffer name="1. end item - new version" />
            <effective_start>2009-02-01T00:00:00</effective_start>
            <quantity>-1</quantity>
          </flow>
        </flows>
    </operation>
  </operations>
  <items>
    <item name="1. end item">
      <operation name="1. deliver end item" />
    </item>
  </items>
  <demands>
    <demand name="1. order 1">
      <quantity>10</quantity>
      <due>2009-01-20T00:00:00</due>
      <priority>11</priority>
      <item name="1. end item" />
    </demand>
    <demand name="1. order 2">
      <quantity>10</quantity>
      <due>2009-02-02T00:00:00</due>
      <priority>12</priority>
      <item name="1. end item" />
    </demand>
    <demand name="1. order 3">
      <quantity>10</quantity>
      <due>2009-02-20T00:00:00</due>
      <priority>13</priority>
      <item name="1. end item" />
    </demand>
  </demands>

  <!--
    Case 2: date-effective material consumption with constrained supply.
    The supply of component A is constrained. Extra supply arrives only after
    the end of the effectivity of the component.
    The situation is solved correctly because the reply date is adjusted to
    the end of the effective time.
  -->
  <buffers>
    <buffer name="2. end item">
      <item name="2. end item" />
      <producing name="2. make end item" xsi:type="operation_fixed_time"
        duration="P1D">
        <flows>
          <flow xsi:type="flow_end">
            <buffer name="2. end item" />
            <quantity>1</quantity>
          </flow>
          <flow xsi:type="flow_start">
            <buffer name="2. component A" />
            <quantity>-1</quantity>
            <effective_end>2009-02-01T00:00:00</effective_end>
          </flow>
          <flow xsi:type="flow_start">
            <buffer name="2. component B" />
            <quantity>-1</quantity>
            <effective_start>2009-02-01T00:00:00</effective_start>
          </flow>
        </flows>
      </producing>
    </buffer>
    <buffer name="2. component A" onhand="10" />
    <buffer name="2. component B" onhand="10" />
  </buffers>
  <operations>
    <operation name="2. deliver end item" xsi:type="operation_fixed_time"
      duration="P1D">
        <flows>
          <flow xsi:type="flow_start">
            <buffer name="2. end item" />
            <quantity>-1</quantity>
          </flow>
        </flows>
    </operation>
    <operation name="2. supply component A" xsi:type="operation_fixed_time">
      <flows>
        <flow xsi:type="flow_end">
          <buffer name="2. component A" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
  </operations>
  <operationplans>
    <!-- This supply of component A is later than the effective end date. -->
    <operationplan id="2001">
      <operation name="2. supply component A"/>
      <start>2009-02-12T00:00:00</start>
      <end>2009-02-12T00:00:00</end>
      <quantity>25</quantity>
      <status>confirmed</status>
    </operationplan>
  </operationplans>
  <items>
    <item name="2. end item">
      <operation name="2. deliver end item" />
    </item>
  </items>
  <demands>
    <demand name="2. order 1">
      <quantity>30</quantity>
      <due>2009-01-01T00:00:00</due>
      <priority>11</priority>
      <item name="2. end item" />
    </demand>
  </demands>

  <!--
    Case 3: date-effective producing flow.
    This scenario models a so-called learning curve: the production of a new
    product becomes more efficient after a while.
    The operation "3. make end item" produces a variable number of units of
    the end item. In january it produces 0.7 units, in februari it produces
    0.8 units and from then onwards it produces 1.0 units.
  -->
  <buffers>
    <buffer name="3. end item">
      <item name="3. end item" />
      <producing name="3. make end item" xsi:type="operation_fixed_time"
        duration="P1D">
        <flows>
          <flow xsi:type="flow_end">
            <buffer name="3. end item" />
            <quantity>0.7</quantity>
            <effective_start>2009-01-01T00:00:00</effective_start>
            <effective_end>2009-02-01T00:00:00</effective_end>
          </flow>
          <flow xsi:type="flow_end">
            <buffer name="3. end item" />
            <quantity>0.8</quantity>
            <effective_start>2009-02-01T00:00:00</effective_start>
            <effective_end>2009-03-01T00:00:00</effective_end>
          </flow>
          <flow xsi:type="flow_end">
            <buffer name="3. end item" />
            <quantity>1.0</quantity>
            <effective_start>2009-03-01T00:00:00</effective_start>
          </flow>
        </flows>
      </producing>
    </buffer>
  </buffers>
  <operations>
    <operation name="3. deliver end item" xsi:type="operation_fixed_time"
      duration="P1D">
        <flows>
          <flow xsi:type="flow_start">
            <buffer name="3. end item" />
            <quantity>-1</quantity>
          </flow>
        </flows>
    </operation>
  </operations>
  <items>
    <item name="3. end item">
      <operation name="3. deliver end item" />
    </item>
  </items>
  <demands>
    <demand name="3. order 1">
      <quantity>100</quantity>
      <due>2009-01-20T00:00:00</due>
      <priority>10</priority>
      <item name="3. end item" />
    </demand>
    <demand name="3. order 2">
      <quantity>100</quantity>
      <due>2009-02-20T00:00:00</due>
      <priority>11</priority>
      <item name="3. end item" />
    </demand>
    <demand name="3. order 3">
      <quantity>100</quantity>
      <due>2009-03-20T00:00:00</due>
      <priority>12</priority>
      <item name="3. end item" />
    </demand>
  </demands>

<?python
print("CREATING CONSTRAINED PLAN")
frepple.solver_mrp(plantype=1, constraints=15, loglevel=2).solve()
frepple.saveplan("output.1.xml")
print("CREATING UNCONSTRAINED PLAN")
frepple.solver_mrp(plantype=2, constraints=15, loglevel=2).solve()
frepple.saveplan("output.2.xml")
?>

</plan>
