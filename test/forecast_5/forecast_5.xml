<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <name>Forecast test model</name>
  <description>
  This test demonstrates the capability to analyze a time series of
  historical demand, and use it to create future forecasted demand quantities.

  In this test case, we don't use any profiling or netting but these
  obviously can all be combined:
    - Create future, gross forecast quantities based on a time series.
    - Profile the forecast over more granular time buckets.
    - Net actual orders from the gross forecast to obtain a net
      forecast to be planned.
  </description>
  <current>2009-01-01T00:00:00</current>

  <!--
  This calendar defines the forecasting buckets.
  -->
  <calendars>
    <calendar name="planningbuckets">
      <buckets>
        <bucket start="2009-01-01T00:00:00" value="1"/>
        <bucket start="2009-02-01T00:00:00" value="1"/>
        <bucket start="2009-03-01T00:00:00" value="1"/>
        <bucket start="2009-04-01T00:00:00" value="1"/>
        <bucket start="2009-05-01T00:00:00" value="1"/>
        <bucket start="2009-06-01T00:00:00" value="1"/>
      </buckets>
    </calendar>
  </calendars>
  <demands>
    <demand name="test" xsi:type="demand_forecast" discrete="false">
      <calendar name="planningbuckets" />
    </demand>
  </demands>

<?python

theitem = frepple.item(name="item")
thecustomer = frepple.customer(name="customer")
thecalendar = frepple.calendar(name="planningbuckets")
thebuckets = [ i.start for i in thecalendar.buckets ]

def testcase(fcstname, series):
  print series
  fcst = frepple.demand_forecast(name=fcstname, item=theitem, customer=thecustomer, calendar=thecalendar)
  fcst.timeseries(series, thebuckets)

print "\nCase 1: A simple constant demand"
testcase("flat demand",[100,100,100,100,100,100,100,100,100,100,100,100,100])

print "\nCase 2: A simple trended forecast"
testcase("trended demand", [10,20,30,40,50,60,70,80,90,100,110,120,130,140,150])

print "\nCase 3: A very irregular demand pattern"
testcase("irregular demand", [10,50,40,5,90,20,30,70,10,100,20,30,100,50])

print "\nCase 4: Demand is first trended and then constant"
testcase("trend plus constant", [0,10,20,30,40,50,60,70,70,70,70,70,70])

print "\nCase 5: Demand is first constant and then a trend starts"
testcase("constant plus trend", [10,10,10,10,10,10,10,10,10,10,20,30,40,50])

print "\nCase 6: A seasonal demand"
testcase("seasonal demand", [10,10,20,30,20,10,10,10,10,20,30,20,10,10,10,10,20,30,20,10,10])

print "\nCase 7: Very little history"
testcase("little history", [10,20])

print "\nCase 8: Intermittent demand"
testcase("intermittent", [7,0,0,5,0,7,0,0,0,0,0,0,5,0,0,0,0,5,0,0,0])

frepple.saveXMLfile("output.1.xml")

?>
</plan>
