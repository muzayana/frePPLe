#
# Copyright (C) 2007-2013 by frePPLe bvba
#
# All information contained herein is, and remains the property of frePPLe.
# You are allowed to use and modify the source code, as long as the software is used
# within your company.
# You are not allowed to distribute the software, either in the form of source code
# or in the form of compiled binaries.
#

#
# This makefile is built as a convenience for developers.
# It provides easy to use wrappers around common administration, configuration, build
# and maintenance tasks:
#  CONFIGURING
#     - prep:        Initializes the AutoMake tools.
#  BUILDING AND COMPILING
#     - default:     Configures and recreates an optimized build from scratch.
#     - debug:       Configures and recreates a debug build from scratch.
#     - coverage:    Configures and recompiles the code for coverage testing.
#     - profile:     Configures and recompiles the code suitable for profiling.
#     - build:       Compiles a configured project.
#     - clean:       Cleans up all intermediate files.
#     - check:       Runs the test suite.
#     - gdb:         Run the gdb debugger
#  DISTRIBUTION TASKS
#     - dist:        Creates a source code tarball.
#  CODE ANALYSIS
#     - stats:       Runs a simple lines-of-code metric on the source code.
#     - todo:        Greps for todo items in the source code.
#     - astyle:      Runs the astyle code beautifier.
#  CODE MAINTENANCE
#     - set_release: Updates all references to the release number from an old to a new number.
#

default: prep config clean build dist check

debug: prep configdebug clean build check

coverage: prep configcoverage clean build check

profile: prep configprofile clean build

prep:
	@echo
	@echo "PHASE: Configuring GNU build tools..."
	aclocal
	autoheader
	libtoolize --copy --force --automake
	automake --add-missing --force-missing --copy
	autoconf

config:
	@echo
	@echo "PHASE: Running configure for optimized enterprise build..."
	./configure --enable-doc --enable-license
#--prefix=`pwd`/install-test --sysconfdir=`pwd`/install-test/etc

configdebug:
	@echo
	@echo "PHASE: Running configure for debug build..."
	./configure --disable-doc --enable-debug

configcoverage:
	@echo
	@echo "PHASE: Running configure for test coverage build..."
	./configure --disable-doc --enable-coverage

configprofile:
	@echo
	@echo "PHASE: Running configure for profiling build..."
	./configure --disable-doc --enable-profile

clean:
	@echo
	@echo "PHASE: Cleaning..."
	make clean

build:
	@echo
	@echo "PHASE: Building..."
	make all

check:
	@echo
	@echo "PHASE: Testing..."
	make check

dist:
	@echo
	@echo "PHASE: Making a distribution..."
	make dist

gdb:
	export FREPPLE_HOME=$(CURDIR)/bin; \
	export PYTHONPATH=$(CURDIR)/contrib/django/; \
	export DJANGO_SETTINGS_MODULE=freppledb.settings; \
	export LD_LIBRARY_PATH=$ROOT/src/.libs; \
	export webservice=1; \
	libtool --mode=execute gdb --args $(CURDIR)/src/frepple $(CURDIR)/contrib/django/freppledb/execute/commands.py
#	valgrind --leak-check=yes $ROOT/src/.libs/frepple $ROOT/contrib/django/freppledb/execute/commands.py
#	valgrind --tool=callgrind --dsymutil=yes $ROOT/src/.libs/frepple $ROOT/contrib/django/freppledb/execute/commands.py


# A simple way to get some code metrics
stats:
	wc -l `find src -name '*.cpp'` \
		`find modules -name '*.cpp'` \
		`find contrib -name '*.cpp'` \
		`find src -name '*.h'` \
		`find include -name '*.h'` \
		`find . -name '*.xsd'` \
		`find . -name '*.nsi'` \
		`find . -name '*.am'` \
		`find . -name '*.ac'` \
		`find modules -name '*.h'` | sort -n
	wc -l `find . -name '*.py'` | sort -n
	wc -l `find contrib -name '*.html'` \
		contrib/django/freppledb/common/static/js/frepple.js \
		contrib/django/freppledb/common/static/css/frepple.css | sort -n

# A simple way to list the todo items
todo:
	grep -i todo `find . -name '*.cpp'` `find . -name '*.h'` `find . -name '*.xml'` `find . -name '*.py'` | sort
	grep -i todo `find . -name '*.cpp'` `find . -name '*.h'` `find . -name '*.xml'` `find . -name '*.py'` | wc

# Reformats the code to comply to some common standard
# Our formatting is closely aligned with the CoreLinux standards
astyleoptions = --style=ansi --indent=spaces=2 --indent-classes --indent-switches --min-conditional-indent=2 --keep-one-line-statements --keep-one-line-blocks --max-instatement-indent=2 --convert-tabs
astyle:
	astyle --mode=c $(astyleoptions) `find . -name '*.cpp'`
	astyle --mode=c $(astyleoptions) `find . -name '*.h'`

# The release number is (unfortunately) stored in a number of independent places:
# This make target is used to consistently update all those places.
#  * The  first 2 arguments need to be integers.
#  * The third argument can be empty. Or it can be a string starting with a '.'/dot.
old1 = 3
old2 = 0
old3 = .1
new1 = 3
new2 = 1
new3 = 
set_release:
	for i in "configure.ac" "include/frepple/utils.h" "contrib/rpm/frepple.spec" "contrib/rpm/frepple.suse.spec" "contrib/django/freppledb/__init__.py" "contrib/django/freppledb/locale/nl/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/nl/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/zh_TW/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/zh_TW/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/it/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/it/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/fr/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/fr/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/ja/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/ja/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/zh_CN/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/zh_CN/LC_MESSAGES/django.po"  "contrib/django/freppledb/locale/es/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/es/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/pt_PT/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/pt_PT/LC_MESSAGES/django.po" "contrib/django/freppledb/locale/pt_BR/LC_MESSAGES/djangojs.po" "contrib/django/freppledb/locale/pt_BR/LC_MESSAGES/django.po"  "bin/frepple.xsd" "bin/frepple_core.xsd" "contrib/debian/changelog" "doc/conf.py"; do \
		sed 's/$(old1)\.$(old2)$(old3)/$(new1).$(new2)$(new3)/g' $$i >out.tmp; \
		mv out.tmp $$i; \
	done
	sed 's/version = "$(old1)\.$(old2)"/version = "$(new1).$(new2)"/g' "doc/conf.py" >out.tmp
	mv out.tmp "doc/conf.py";
	sed 's/Version "$(old1)\.$(old2)\./Version "$(new1).$(new2)./g' "contrib/installer/frepple.nsi" >out.tmp
	sed 's/PRODUCT_VERSION "$(old1)\.$(old2)$(old3)"/PRODUCT_VERSION "$(new1).$(new2)$(new3)"/' out.tmp >"contrib/installer/frepple.nsi"
	for i in "src/dll.rc" "src/exe.rc"; do \
		sed 's/$(old1),$(old2),/$(new1),$(new2),/g' $$i >out.tmp; \
		sed 's/$(old1), $(old2),/$(new1), $(new2),/g' out.tmp >$$i; \
		rm out.tmp; \
	done
